---
import { Image } from 'astro:assets';
import Prose from '../components/Prose.astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import { render } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { dateFormat } from '../lib/date-format.helper';
import Header from '../components/Header.astro';
import { BackButton } from '../components/BackButton';
import { timeToRead } from '../lib/reading-time';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: {slug: post.id},
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const {Content} = await render(post);

const title = post.data.title;
// const shortDescription = getShortDescription(frontmatter.description);
// const articleDate = processArticleDate(frontmatter.timestamp);
// const sourceUrl = generateSourceUrl(frontmatter.filename, "blog");
---

<Layout>
    <Fragment slot="head">
        <title>{title}</title>
        <!--<meta name="description" content={frontmatter.description}/>-->
        <!--<meta property="og:title" content={`${frontmatter.title} • ${GLOBAL.username}`}/>-->
        <!--<meta property="og:description" content={shortDescription} />-->
        <!--// <meta property="og:image" content={`${GLOBAL.rootUrl}/${GLOBAL.profileImage}`}/>-->
        <!--<meta property="og:url" content={frontmatter.url}/>-->
        <meta name="twitter:card" content="summary_large_image"/>
        <!--<meta name="twitter:title" content={`${frontmatter.title} • ${GLOBAL.username}`}/>-->
        <!--<meta name="twitter:description" content={shortDescription} />-->
        <!--// <meta name="twitter:image" content={`${GLOBAL.rootUrl}/${GLOBAL.profileImage}`}/>-->
        <meta http-equiv="content-language" content="en"/>
        <meta name="language" content="English"/>
    </Fragment>
    <Fragment slot="header">
        <Header>
            <div class="flex font-display font-medium gap-4 flex-row px-0 mt-0">
                <BackButton client:only="react" />
            </div>
        </Header>
    </Fragment>
    <section class="pt-8 max-w-4xl mx-auto px-8 mb-8">
        <div class="relative overflow-hidden" transition:name={`${post.id}-image`}>
            <Image src={post.data.cover} alt="Cover image" class="aspect-video object-cover w-full"
                   width="800"
                   height="450"
            />
            <div class="absolute bottom-0 left-0 w-full h-4/5 bg-gradient-to-t from-zag-dark to-transparent"></div>
            <h1 class="absolute bottom-5 mx-2 text-2xl sm:text-3xl leading-normal font-display scroll-m-24 text-zag-light"
                id="_top">
              {title}
            </h1>
        </div>
        <p class="">By {post.data.author}</p>
        <p class="mb-8">{dateFormat(post.data.released)} • {timeToRead(post)}min read</p>
        <Prose>
            <Content/>
        </Prose>
    </section>
</Layout>
